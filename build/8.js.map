{"version":3,"sources":["../../src/pages/password-change/password-change.module.ts","../../src/pages/password-change/password-change.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { PasswordChangePage } from './password-change';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PasswordChangePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(PasswordChangePage),\r\n  ],\r\n})\r\nexport class PasswordChangePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-change/password-change.module.ts","import { RestProvider } from './../../providers/rest/rest';\r\nimport { LoadingProvider } from './../../providers/loading/loading';\r\nimport { AuthProvider } from './../../providers/auth/auth';\r\nimport { Component, Input } from '@angular/core';\r\nimport { IonicPage, NavController, AlertController, NavParams } from 'ionic-angular';\r\nimport { GlobalProvider } from '../../providers/global/global';\r\n\r\n/**\r\n * Generated class for the PasswordChangePage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-password-change',\r\n  templateUrl: 'password-change.html',\r\n})\r\nexport class PasswordChangePage {\r\n  @Input() events: any;\r\n\r\n  public password: string;\r\n  public password_confirmation:string;\r\n\r\n  public errorPasswordEmpty: boolean;\r\n  public errorPasswordConfirmEmpty: boolean;\r\n  public errorPasswordConfirmInvalid: boolean;\r\n\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public global: GlobalProvider, \r\n    public alertCtrl: AlertController,\r\n    public auth: AuthProvider,\r\n    public loading: LoadingProvider,\r\n    public rest: RestProvider,\r\n    public navParams: NavParams\r\n  ) {\r\n    \r\n    this.errorPasswordEmpty = false;\r\n    this.errorPasswordConfirmEmpty = false;\r\n    this.errorPasswordConfirmInvalid = false;\r\n\r\n    this.events =  {\r\n      \"onPasswordChange\" : this.onPasswordChange\r\n    }\r\n\r\n  }\r\n\r\n  onEvent = (event: string): void => {\r\n    if (event == \"onPasswordChange\" && !this.validate()) {\r\n        return ;\r\n    }\r\n    if (this.events[event]) {\r\n        this.events[event]({\r\n            'password': this.password,\r\n            'password_confirmation': this.password_confirmation\r\n        });\r\n    }        \r\n  }\r\n\r\n  validate():boolean {\r\n    this.errorPasswordEmpty = false;\r\n    this.errorPasswordConfirmEmpty = false;\r\n    this.errorPasswordConfirmInvalid = false;\r\n\r\n    if (!this.password || this.password.length == 0) {\r\n        this.errorPasswordEmpty = true;\r\n    }\r\n\r\n    if (!this.password_confirmation || this.password_confirmation.length == 0) {\r\n      this.errorPasswordConfirmEmpty = true;\r\n    }\r\n    else if (this.password !== this.password_confirmation) {\r\n      this.errorPasswordConfirmInvalid = true;\r\n    }\r\n    \r\n    return !this.errorPasswordEmpty && !this.errorPasswordConfirmEmpty && !this.errorPasswordConfirmInvalid;\r\n  }\r\n\r\n  // login and go to home page\r\n  onPasswordChange = (params): void => {\r\n    this.loading.show();\r\n    let token = this.navParams.get('token');\r\n    this.rest.setNewPassword(this.password, this.password_confirmation, token).then(\r\n      (scs) => {\r\n        this.authSuccess(scs);\r\n        this.navCtrl.setRoot('HomePage');\r\n      },\r\n      (err) => {\r\n        this.loading.hide();\r\n        \r\n        let message = \"Không thể kết nối tới máy chủ!\";\r\n        if (err.error.error == 'token_not_found'){\r\n          message = \"Không tìm thấy token!\"\r\n        }\r\n        if (err.error.error == 'code_not_confirm'){\r\n          message = \"Mã xác thực chưa được xác nhận lại!\"\r\n        }\r\n        if (err.error.error == 'input_format_fail'){\r\n          message = \"Mật khẩu không hợp lệ!\"\r\n        }\r\n        \r\n        let alert = this.alertCtrl.create({\r\n          title: 'Lỗi',\r\n          message: message,\r\n          buttons: [\r\n            {\r\n              text: 'OK',\r\n              role: 'ok',\r\n            }\r\n          ]\r\n        });\r\n        alert.present();\r\n      }\r\n    )\r\n    \r\n\r\n  }\r\n\r\n  openLoginPage() {\r\n    this.navCtrl.setRoot('LoginPage');\r\n  }\r\n\r\n  /**\r\n   * Actions to take after succesful login\r\n   * \r\n   * @param data information returned from server\r\n   */\r\n  authSuccess(data) {\r\n    localStorage.setItem('token', data.token);\r\n    this.global.userInfo = data.info;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-change/password-change.ts"],"sourceRoot":""}